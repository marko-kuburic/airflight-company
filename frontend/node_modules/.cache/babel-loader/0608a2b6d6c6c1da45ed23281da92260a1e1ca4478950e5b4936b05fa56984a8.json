{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danil\\\\OneDrive\\\\Desktop\\\\CetvrtaGod\\\\IIS\\\\projekat\\\\airflight-company\\\\frontend\\\\src\\\\components\\\\NotificationsList.js\";\nimport React from 'react';\nimport { NotificationItem } from './NotificationItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NotificationsList({\n  notifications,\n  onNotificationClick,\n  onMarkAsRead\n}) {\n  const containerStyle = {\n    backgroundColor: 'white',\n    border: '1px solid #e5e7eb',\n    borderRadius: '8px',\n    overflow: 'hidden',\n    fontFamily: 'Inter, sans-serif'\n  };\n  const handleNotificationClick = notification => {\n    // Mark as read if it's unread\n    if (!notification.isRead && onMarkAsRead) {\n      onMarkAsRead(notification.id);\n    }\n\n    // Handle notification action\n    if (onNotificationClick) {\n      onNotificationClick(notification);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: notifications && notifications.length > 0 ? notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(NotificationItem, {\n      type: notification.type,\n      title: notification.title,\n      message: notification.message,\n      timestamp: notification.timestamp,\n      isHighlighted: notification.isHighlighted,\n      onClick: () => handleNotificationClick(notification)\n    }, notification.id || index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '48px 24px',\n        textAlign: 'center',\n        color: '#6b7280',\n        fontSize: '14px'\n      },\n      children: \"No notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = NotificationsList;\nvar _c;\n$RefreshReg$(_c, \"NotificationsList\");","map":{"version":3,"names":["React","NotificationItem","jsxDEV","_jsxDEV","NotificationsList","notifications","onNotificationClick","onMarkAsRead","containerStyle","backgroundColor","border","borderRadius","overflow","fontFamily","handleNotificationClick","notification","isRead","id","style","children","length","map","index","type","title","message","timestamp","isHighlighted","onClick","fileName","_jsxFileName","lineNumber","columnNumber","padding","textAlign","color","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/danil/OneDrive/Desktop/CetvrtaGod/IIS/projekat/airflight-company/frontend/src/components/NotificationsList.js"],"sourcesContent":["import React from 'react';\r\nimport { NotificationItem } from './NotificationItem';\r\n\r\nexport function NotificationsList({ notifications, onNotificationClick, onMarkAsRead }) {\r\n  const containerStyle = {\r\n    backgroundColor: 'white',\r\n    border: '1px solid #e5e7eb',\r\n    borderRadius: '8px',\r\n    overflow: 'hidden',\r\n    fontFamily: 'Inter, sans-serif'\r\n  };\r\n\r\n  const handleNotificationClick = (notification) => {\r\n    // Mark as read if it's unread\r\n    if (!notification.isRead && onMarkAsRead) {\r\n      onMarkAsRead(notification.id);\r\n    }\r\n    \r\n    // Handle notification action\r\n    if (onNotificationClick) {\r\n      onNotificationClick(notification);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      {notifications && notifications.length > 0 ? (\r\n        notifications.map((notification, index) => (\r\n          <NotificationItem\r\n            key={notification.id || index}\r\n            type={notification.type}\r\n            title={notification.title}\r\n            message={notification.message}\r\n            timestamp={notification.timestamp}\r\n            isHighlighted={notification.isHighlighted}\r\n            onClick={() => handleNotificationClick(notification)}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div style={{\r\n          padding: '48px 24px',\r\n          textAlign: 'center',\r\n          color: '#6b7280',\r\n          fontSize: '14px'\r\n        }}>\r\n          No notifications\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,OAAO,SAASC,iBAAiBA,CAAC;EAAEC,aAAa;EAAEC,mBAAmB;EAAEC;AAAa,CAAC,EAAE;EACtF,MAAMC,cAAc,GAAG;IACrBC,eAAe,EAAE,OAAO;IACxBC,MAAM,EAAE,mBAAmB;IAC3BC,YAAY,EAAE,KAAK;IACnBC,QAAQ,EAAE,QAAQ;IAClBC,UAAU,EAAE;EACd,CAAC;EAED,MAAMC,uBAAuB,GAAIC,YAAY,IAAK;IAChD;IACA,IAAI,CAACA,YAAY,CAACC,MAAM,IAAIT,YAAY,EAAE;MACxCA,YAAY,CAACQ,YAAY,CAACE,EAAE,CAAC;IAC/B;;IAEA;IACA,IAAIX,mBAAmB,EAAE;MACvBA,mBAAmB,CAACS,YAAY,CAAC;IACnC;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKe,KAAK,EAAEV,cAAe;IAAAW,QAAA,EACxBd,aAAa,IAAIA,aAAa,CAACe,MAAM,GAAG,CAAC,GACxCf,aAAa,CAACgB,GAAG,CAAC,CAACN,YAAY,EAAEO,KAAK,kBACpCnB,OAAA,CAACF,gBAAgB;MAEfsB,IAAI,EAAER,YAAY,CAACQ,IAAK;MACxBC,KAAK,EAAET,YAAY,CAACS,KAAM;MAC1BC,OAAO,EAAEV,YAAY,CAACU,OAAQ;MAC9BC,SAAS,EAAEX,YAAY,CAACW,SAAU;MAClCC,aAAa,EAAEZ,YAAY,CAACY,aAAc;MAC1CC,OAAO,EAAEA,CAAA,KAAMd,uBAAuB,CAACC,YAAY;IAAE,GANhDA,YAAY,CAACE,EAAE,IAAIK,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAO9B,CACF,CAAC,gBAEF7B,OAAA;MAAKe,KAAK,EAAE;QACVe,OAAO,EAAE,WAAW;QACpBC,SAAS,EAAE,QAAQ;QACnBC,KAAK,EAAE,SAAS;QAChBC,QAAQ,EAAE;MACZ,CAAE;MAAAjB,QAAA,EAAC;IAEH;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACK,EAAA,GA/CejC,iBAAiB;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}