{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danil\\\\OneDrive\\\\Desktop\\\\CetvrtaGod\\\\IIS\\\\projekat\\\\airflight-company\\\\frontend\\\\src\\\\pages\\\\EditTicket.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Layout } from '../components/Layout';\nimport { TicketEditForm } from '../components/TicketEditForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditTicket() {\n  _s();\n  const {\n    ticketId\n  } = useParams();\n  const navigate = useNavigate();\n  const [ticketData, setTicketData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n\n  // Mock ticket data - in real app this would come from API\n  const mockTicketData = {\n    ticketNumber: 'TCK-10231',\n    flightNumber: 'FD-801',\n    route: 'BEG → CDG',\n    departure: '08:10',\n    arrival: '10:35',\n    aircraft: 'A320-11',\n    status: 'Confirmed',\n    class: 'Economy',\n    baggage: 'Included (1 carry-on + 1 checked)',\n    extraBaggage: 'None',\n    seat: 'Auto-assigned',\n    contactEmail: 'ana@example.com',\n    passengerName: 'Ana Petrović',\n    bookingReference: 'ABC123'\n  };\n  useEffect(() => {\n    // In real app, fetch ticket data from API\n    const fetchTicketData = async () => {\n      setIsLoading(true);\n      try {\n        // Simulate API call\n        // const response = await fetch(`/api/tickets/${ticketId}`);\n        // const data = await response.json();\n\n        // For now, use mock data\n        setTimeout(() => {\n          setTicketData(mockTicketData);\n          setIsLoading(false);\n        }, 500);\n      } catch (error) {\n        console.error('Error fetching ticket data:', error);\n        setIsLoading(false);\n      }\n    };\n    if (ticketId) {\n      fetchTicketData();\n    } else {\n      // If no ticketId in URL, use mock data directly\n      setTicketData(mockTicketData);\n    }\n  }, [ticketId]);\n  const handleSave = async formData => {\n    setIsSaving(true);\n    try {\n      // In real app, send update to API\n      // const response = await fetch(`/api/tickets/${ticketId}`, {\n      //   method: 'PUT',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //   },\n      //   body: JSON.stringify({\n      //     ...formData,\n      //     ticketId: ticketData.ticketNumber\n      //   })\n      // });\n\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      console.log('Ticket updated:', {\n        ticketId: ticketData.ticketNumber,\n        ...formData\n      });\n\n      // Show success message\n      alert('Ticket updated successfully! Confirmation email sent.');\n\n      // Navigate back to My Tickets\n      navigate('/tickets');\n    } catch (error) {\n      console.error('Error updating ticket:', error);\n      alert('Error updating ticket. Please try again.');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleBack = () => {\n    navigate('/tickets');\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '400px',\n          fontSize: '16px',\n          color: '#6b7280'\n        },\n        children: \"Loading ticket details...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n  if (!ticketData) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '400px',\n          fontSize: '16px',\n          color: '#ef4444'\n        },\n        children: \"Ticket not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(TicketEditForm, {\n      ticketData: ticketData,\n      onSave: handleSave,\n      onBack: handleBack,\n      isLoading: isSaving\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(EditTicket, \"N5NZm80YqjEKCKmbnrEIZ1oylhk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditTicket;\nvar _c;\n$RefreshReg$(_c, \"EditTicket\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Layout","TicketEditForm","jsxDEV","_jsxDEV","EditTicket","_s","ticketId","navigate","ticketData","setTicketData","isLoading","setIsLoading","isSaving","setIsSaving","mockTicketData","ticketNumber","flightNumber","route","departure","arrival","aircraft","status","class","baggage","extraBaggage","seat","contactEmail","passengerName","bookingReference","fetchTicketData","setTimeout","error","console","handleSave","formData","Promise","resolve","log","alert","handleBack","children","style","display","justifyContent","alignItems","height","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","onSave","onBack","_c","$RefreshReg$"],"sources":["C:/Users/danil/OneDrive/Desktop/CetvrtaGod/IIS/projekat/airflight-company/frontend/src/pages/EditTicket.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Layout } from '../components/Layout';\r\nimport { TicketEditForm } from '../components/TicketEditForm';\r\n\r\nexport default function EditTicket() {\r\n  const { ticketId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [ticketData, setTicketData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  // Mock ticket data - in real app this would come from API\r\n  const mockTicketData = {\r\n    ticketNumber: 'TCK-10231',\r\n    flightNumber: 'FD-801',\r\n    route: 'BEG → CDG',\r\n    departure: '08:10',\r\n    arrival: '10:35',\r\n    aircraft: 'A320-11',\r\n    status: 'Confirmed',\r\n    class: 'Economy',\r\n    baggage: 'Included (1 carry-on + 1 checked)',\r\n    extraBaggage: 'None',\r\n    seat: 'Auto-assigned',\r\n    contactEmail: 'ana@example.com',\r\n    passengerName: 'Ana Petrović',\r\n    bookingReference: 'ABC123'\r\n  };\r\n\r\n  useEffect(() => {\r\n    // In real app, fetch ticket data from API\r\n    const fetchTicketData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        // Simulate API call\r\n        // const response = await fetch(`/api/tickets/${ticketId}`);\r\n        // const data = await response.json();\r\n        \r\n        // For now, use mock data\r\n        setTimeout(() => {\r\n          setTicketData(mockTicketData);\r\n          setIsLoading(false);\r\n        }, 500);\r\n      } catch (error) {\r\n        console.error('Error fetching ticket data:', error);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    if (ticketId) {\r\n      fetchTicketData();\r\n    } else {\r\n      // If no ticketId in URL, use mock data directly\r\n      setTicketData(mockTicketData);\r\n    }\r\n  }, [ticketId]);\r\n\r\n  const handleSave = async (formData) => {\r\n    setIsSaving(true);\r\n    try {\r\n      // In real app, send update to API\r\n      // const response = await fetch(`/api/tickets/${ticketId}`, {\r\n      //   method: 'PUT',\r\n      //   headers: {\r\n      //     'Content-Type': 'application/json',\r\n      //   },\r\n      //   body: JSON.stringify({\r\n      //     ...formData,\r\n      //     ticketId: ticketData.ticketNumber\r\n      //   })\r\n      // });\r\n      \r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      console.log('Ticket updated:', {\r\n        ticketId: ticketData.ticketNumber,\r\n        ...formData\r\n      });\r\n      \r\n      // Show success message\r\n      alert('Ticket updated successfully! Confirmation email sent.');\r\n      \r\n      // Navigate back to My Tickets\r\n      navigate('/tickets');\r\n      \r\n    } catch (error) {\r\n      console.error('Error updating ticket:', error);\r\n      alert('Error updating ticket. Please try again.');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate('/tickets');\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Layout>\r\n        <div style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          height: '400px',\r\n          fontSize: '16px',\r\n          color: '#6b7280'\r\n        }}>\r\n          Loading ticket details...\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  if (!ticketData) {\r\n    return (\r\n      <Layout>\r\n        <div style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          height: '400px',\r\n          fontSize: '16px',\r\n          color: '#ef4444'\r\n        }}>\r\n          Ticket not found\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <TicketEditForm\r\n        ticketData={ticketData}\r\n        onSave={handleSave}\r\n        onBack={handleBack}\r\n        isLoading={isSaving}\r\n      />\r\n    </Layout>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}