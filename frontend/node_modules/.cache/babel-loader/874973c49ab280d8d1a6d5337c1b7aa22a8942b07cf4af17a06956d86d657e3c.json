{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danil\\\\OneDrive\\\\Desktop\\\\CetvrtaGod\\\\IIS\\\\projekat\\\\airflight-company\\\\frontend\\\\src\\\\components\\\\MembershipTierCard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MembershipTierCard({\n  tier,\n  currentPoints,\n  nextTierPoints\n}) {\n  const containerStyle = {\n    backgroundColor: 'white',\n    border: '1px solid #e5e7eb',\n    borderRadius: '8px',\n    padding: '24px',\n    fontFamily: 'Inter, sans-serif'\n  };\n  const titleStyle = {\n    fontSize: '16px',\n    fontWeight: '500',\n    color: '#6b7280',\n    marginBottom: '8px'\n  };\n  const tierStyle = {\n    fontSize: '24px',\n    fontWeight: '700',\n    color: '#f59e0b',\n    marginBottom: '16px'\n  };\n  const progressContainerStyle = {\n    marginBottom: '8px'\n  };\n  const progressLabelStyle = {\n    fontSize: '14px',\n    color: '#6b7280',\n    marginBottom: '8px'\n  };\n  const progressBarContainerStyle = {\n    width: '100%',\n    height: '8px',\n    backgroundColor: '#f3f4f6',\n    borderRadius: '4px',\n    overflow: 'hidden'\n  };\n  const progressBarStyle = {\n    height: '100%',\n    backgroundColor: '#f59e0b',\n    borderRadius: '4px',\n    transition: 'width 0.3s ease'\n  };\n  const progressTextStyle = {\n    fontSize: '12px',\n    color: '#6b7280',\n    marginTop: '4px'\n  };\n\n  // Calculate progress percentage\n  const calculateProgress = () => {\n    if (!currentPoints || !nextTierPoints) return 65; // Default 65% as shown in image\n\n    const tierThresholds = {\n      'Bronze': {\n        min: 0,\n        max: 10000\n      },\n      'Silver': {\n        min: 10000,\n        max: 25000\n      },\n      'Gold': {\n        min: 25000,\n        max: 50000\n      },\n      'Platinum': {\n        min: 50000,\n        max: 100000\n      }\n    };\n    const currentTier = tierThresholds[tier];\n    if (!currentTier) return 0;\n    const progressInTier = currentPoints - currentTier.min;\n    const tierRange = currentTier.max - currentTier.min;\n    return Math.min(Math.max(progressInTier / tierRange * 100, 0), 100);\n  };\n  const progressPercentage = calculateProgress();\n  const getNextTierName = () => {\n    const tiers = ['Bronze', 'Silver', 'Gold', 'Platinum'];\n    const currentIndex = tiers.indexOf(tier);\n    if (currentIndex >= 0 && currentIndex < tiers.length - 1) {\n      return tiers[currentIndex + 1];\n    }\n    return 'Platinum'; // Already at highest tier\n  };\n  const getPointsToNextTier = () => {\n    const tierThresholds = {\n      'Bronze': 10000,\n      'Silver': 25000,\n      'Gold': 50000,\n      'Platinum': 100000\n    };\n    const nextTier = getNextTierName();\n    if (nextTier === 'Platinum' && tier === 'Platinum') {\n      return 0; // Already at highest tier\n    }\n    return tierThresholds[nextTier] - (currentPoints || 18450);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: titleStyle,\n      children: \"Membership Tier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: tierStyle,\n      children: tier || 'Gold'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: progressContainerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: progressLabelStyle,\n        children: [\"Progress to \", getNextTierName()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: progressBarContainerStyle,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...progressBarStyle,\n            width: `${progressPercentage}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: progressTextStyle,\n        children: getPointsToNextTier() > 0 ? `${getPointsToNextTier().toLocaleString()} points to ${getNextTierName()}` : `Congratulations! You've reached ${tier} tier`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_c = MembershipTierCard;\nvar _c;\n$RefreshReg$(_c, \"MembershipTierCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MembershipTierCard","tier","currentPoints","nextTierPoints","containerStyle","backgroundColor","border","borderRadius","padding","fontFamily","titleStyle","fontSize","fontWeight","color","marginBottom","tierStyle","progressContainerStyle","progressLabelStyle","progressBarContainerStyle","width","height","overflow","progressBarStyle","transition","progressTextStyle","marginTop","calculateProgress","tierThresholds","min","max","currentTier","progressInTier","tierRange","Math","progressPercentage","getNextTierName","tiers","currentIndex","indexOf","length","getPointsToNextTier","nextTier","style","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/danil/OneDrive/Desktop/CetvrtaGod/IIS/projekat/airflight-company/frontend/src/components/MembershipTierCard.js"],"sourcesContent":["import React from 'react';\r\n\r\nexport function MembershipTierCard({ tier, currentPoints, nextTierPoints }) {\r\n  const containerStyle = {\r\n    backgroundColor: 'white',\r\n    border: '1px solid #e5e7eb',\r\n    borderRadius: '8px',\r\n    padding: '24px',\r\n    fontFamily: 'Inter, sans-serif'\r\n  };\r\n\r\n  const titleStyle = {\r\n    fontSize: '16px',\r\n    fontWeight: '500',\r\n    color: '#6b7280',\r\n    marginBottom: '8px'\r\n  };\r\n\r\n  const tierStyle = {\r\n    fontSize: '24px',\r\n    fontWeight: '700',\r\n    color: '#f59e0b',\r\n    marginBottom: '16px'\r\n  };\r\n\r\n  const progressContainerStyle = {\r\n    marginBottom: '8px'\r\n  };\r\n\r\n  const progressLabelStyle = {\r\n    fontSize: '14px',\r\n    color: '#6b7280',\r\n    marginBottom: '8px'\r\n  };\r\n\r\n  const progressBarContainerStyle = {\r\n    width: '100%',\r\n    height: '8px',\r\n    backgroundColor: '#f3f4f6',\r\n    borderRadius: '4px',\r\n    overflow: 'hidden'\r\n  };\r\n\r\n  const progressBarStyle = {\r\n    height: '100%',\r\n    backgroundColor: '#f59e0b',\r\n    borderRadius: '4px',\r\n    transition: 'width 0.3s ease'\r\n  };\r\n\r\n  const progressTextStyle = {\r\n    fontSize: '12px',\r\n    color: '#6b7280',\r\n    marginTop: '4px'\r\n  };\r\n\r\n  // Calculate progress percentage\r\n  const calculateProgress = () => {\r\n    if (!currentPoints || !nextTierPoints) return 65; // Default 65% as shown in image\r\n    \r\n    const tierThresholds = {\r\n      'Bronze': { min: 0, max: 10000 },\r\n      'Silver': { min: 10000, max: 25000 },\r\n      'Gold': { min: 25000, max: 50000 },\r\n      'Platinum': { min: 50000, max: 100000 }\r\n    };\r\n\r\n    const currentTier = tierThresholds[tier];\r\n    if (!currentTier) return 0;\r\n\r\n    const progressInTier = currentPoints - currentTier.min;\r\n    const tierRange = currentTier.max - currentTier.min;\r\n    \r\n    return Math.min(Math.max((progressInTier / tierRange) * 100, 0), 100);\r\n  };\r\n\r\n  const progressPercentage = calculateProgress();\r\n\r\n  const getNextTierName = () => {\r\n    const tiers = ['Bronze', 'Silver', 'Gold', 'Platinum'];\r\n    const currentIndex = tiers.indexOf(tier);\r\n    if (currentIndex >= 0 && currentIndex < tiers.length - 1) {\r\n      return tiers[currentIndex + 1];\r\n    }\r\n    return 'Platinum'; // Already at highest tier\r\n  };\r\n\r\n  const getPointsToNextTier = () => {\r\n    const tierThresholds = {\r\n      'Bronze': 10000,\r\n      'Silver': 25000,\r\n      'Gold': 50000,\r\n      'Platinum': 100000\r\n    };\r\n\r\n    const nextTier = getNextTierName();\r\n    if (nextTier === 'Platinum' && tier === 'Platinum') {\r\n      return 0; // Already at highest tier\r\n    }\r\n\r\n    return tierThresholds[nextTier] - (currentPoints || 18450);\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div style={titleStyle}>Membership Tier</div>\r\n      <div style={tierStyle}>{tier || 'Gold'}</div>\r\n      \r\n      <div style={progressContainerStyle}>\r\n        <div style={progressLabelStyle}>\r\n          Progress to {getNextTierName()}\r\n        </div>\r\n        \r\n        <div style={progressBarContainerStyle}>\r\n          <div \r\n            style={{\r\n              ...progressBarStyle,\r\n              width: `${progressPercentage}%`\r\n            }}\r\n          />\r\n        </div>\r\n        \r\n        <div style={progressTextStyle}>\r\n          {getPointsToNextTier() > 0 \r\n            ? `${getPointsToNextTier().toLocaleString()} points to ${getNextTierName()}`\r\n            : `Congratulations! You've reached ${tier} tier`\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}