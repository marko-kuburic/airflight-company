services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: air-company-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-air_company}
      MYSQL_USER: ${MYSQL_USER:-aircompany}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-aircompany123}
      MYSQL_INITDB_SKIP_TZINFO: 1
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - air-company-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10


  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: air-company-app
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-docker}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL:-jdbc:mysql://mysql:3306/air_company?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&useAffectedRows=false&allowMultiQueries=true}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME:-aircompany}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD:-aircompany123}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO:-update}
      SPRING_JPA_SHOW_SQL: ${SPRING_JPA_SHOW_SQL:-true}
      SERVER_PORT: ${SERVER_PORT:-8080}
      JWT_SECRET: ${JWT_SECRET:-mySecretKey123456789012345678901234567890}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
    ports:
      - "${APP_PORT:-8080}:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - air-company-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: air-company-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - air-company-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Nginx (reverse proxy and load balancer)
  nginx:
    image: nginx:alpine
    container_name: air-company-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - air-company-network
    profiles:
      - nginx

  # phpMyAdmin (database management)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: air-company-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER:-aircompany}
      PMA_PASSWORD: ${MYSQL_PASSWORD:-aircompany123}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
    ports:
      - "${PHPMYADMIN_PORT:-8081}:80"
    depends_on:
      - mysql
    networks:
      - air-company-network
    profiles:
      - admin


volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  air-company-network:
    driver: bridge
